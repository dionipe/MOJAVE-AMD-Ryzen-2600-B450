#!/bin/bash
# 
# POST INSTALL SCRIPT (KERNEL / KEXTS / USBFIX)
# ~XLNC~
#

dir=${0%/*}
if [ -d "$dir" ]; then
  cd "$dir"
fi
while [ ! -d /Volumes/$VOLUME/System ]; do
printf "\n\================ POST INSTALL SCRIPT ================\ \n"
printf "\n\n\nEnter the name of the disk where you installed OSX ? \n( Press Enter to exit! )\n\n>> "
read VOLUME
printf "\n\n Entered disk name: $VOLUME "
if [ -z $VOLUME ]; then
printf "\n\n=> Exiting......\n"
exit 1
fi
if [ -d /Volumes/$VOLUME/System ]; then 
break
else
printf "\n==> Disk doesnt Exist !\n"
fi
done
printf "\n\n Performing post install actions on : $VOLUME "
printf "\n=> Installing kernel for AMD\n"
cp -Rf ./Kernels/kernel /Volumes/$VOLUME/System/Library/Kernels/kernel
touch /Volumes/$VOLUME/System/Library/Kernels/kernel
printf "\n=> Removing Problematic Kexts\n"
rm -rf /Volumes/$VOLUME/System/Library/Extensions/AppleIntelCPUPowerManagement.kext
rm -rf /Volumes/$VOLUME/System/Library/Extensions/pmtelemetry.kext
rm -rf /Volumes/$VOLUME/System/Library/Extensions/AppleTyMCEDriver.kext
printf "\n=> Installing Extensions\n"
cp -Rf ./Extensions/*.kext /Volumes/$VOLUME/System/Library/Extensions/
touch /Volumes/$VOLUME/System/Library/Extensions/
printf "\n=> Preparing for USB FIX\n"
rm -rf /Volumes/$VOLUME/System/Library/Frameworks/CoreMediaIO.framework/Versions/A/Resources/VDC.plugin
rm -rf /Volumes/$VOLUME/System/Library/SystemProfiler/SPUSBReporter.spreporter
cp -Rf ./USBfix/VDC.plugin /Volumes/$VOLUME/System/Library/Frameworks/CoreMediaIO.framework/Versions/A/Resources/
cp -Rf ./USBfix/SPUSBReporter.spreporter /Volumes/$VOLUME/System/Library/SystemProfiler/
printf "\n=> Applying USB FIX\n"
cp -Rf ./USBfix/*.kext /Volumes/$VOLUME/System/Library/Extensions/
printf "\n=> Fixing Permissions\n"
chown -R 0:0 /Volumes/$VOLUME/System/Library/Extensions/ && chmod -R 755 /Volumes/$VOLUME/System/Library/Extensions/
printf "\n=> Removing the old caches , PrelinkedKernel and rebuilding for AMD\n"
printf "\n   Verbose: \n"
rm -rf /Volumes/$VOLUME/System/Caches/com.apple.kext.caches
rm -rf /Volumes/$VOLUME/System/Library/PrelinkedKernels/prelinkedkernel
kextcache -u /Volumes/$VOLUME/
printf "\n=> Finished !\n"
printf "\n=> Exiting......\n"
printf "\n =============== NOW REBOOT BACK TO YOUR $VOLUME DRIVE =============== \n"

exit 0
